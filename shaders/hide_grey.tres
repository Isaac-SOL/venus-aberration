[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://cjt2kf61626vh"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ygxa3"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_pla6d"]
function = 2

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_lhh3l"]
default_input_values = [0, false, 1, 0.0, 2, 1.0]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p1 = n_out2p0.r;


// Compare:3
	float n_in3p1 = 0.00000;
	bool n_out3p0 = n_out2p1 > n_in3p1;


	float n_out4p0;
// Switch:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 1.00000;
	n_out4p0 = mix(n_in4p2, n_in4p1, float(n_out3p0));


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);
	COLOR.a = n_out4p0;


}
"
graph_offset = Vector2(-342.42, -18.7926)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(480, 80)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_ygxa3")
nodes/fragment/2/position = Vector2(-380, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeCompare_pla6d")
nodes/fragment/3/position = Vector2(-20, 220)
nodes/fragment/4/node = SubResource("VisualShaderNodeSwitch_lhh3l")
nodes/fragment/4/position = Vector2(180, 220)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 2, 1, 3, 0, 3, 0, 4, 0, 4, 0, 0, 1)
